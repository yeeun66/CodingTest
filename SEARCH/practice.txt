# 2468번 _ 안전영역 _ BFS

입력 : 5
6 8 2 6 2
3 2 3 4 6
6 7 3 3 2
7 2 5 3 6
8 9 5 2 7

if : 높이 4이하인 모든 지점이 물이 잠기면?
(높이 4 이하인 것들 모두 -1로 값 바꿔)
6   8 -1  6 -1
-1 -1 -1 -1  6
6   7 -1 -1 -1
7  -1  5 -1  6
8   9  5 -1  7

-> 안전 영역 5개 (이 갯수 세는 건 그냥 BFS 돌면서 -1일 때 제외하고 카운트 해)

if : 높이 6이하인 모든 지점이 물이 잠기면?
-1  8 -1 -1 -1
-1 -1 -1 -1 -1
-1  7 -1 -1 -1
7  -1 -1 -1 -1
8   9  -1 -1 7
-> 안전 영역 4개

-- 그냥 BFS 도는게 어려운 것이었다
[BFS 알고리즘]
이중 for문
    -1이 아니고, 방문했던 지점이 아니면 그 지점(스타트 노드)으로 부터 queue로 상하좌우 탐색.
    queue 엠티면 count 1증가 시키고 
    다시 아까 스타트 노드 였던 점부터 다시 브루트포스로 -1이 아니고, 방문하지 않았던 점을 찾아서 다시 queue에 넣고 상하좌우 탐색
[정리] (높이 K이하인 모든 지점이 물에 잠기면 + BFS) 이걸 브루트포스로 1부터 배열의 max값 까지 계산 후, 
       안전 영역에 최대 갯수도 어떤 변수에 저장 해 놓고 새로 찾은 안전 영역 갯수가 더 많으면 업데이트