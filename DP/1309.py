# 동물원

# 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성
# 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정

# 우리의 크기 N(1≤N≤100,000)
# 첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력

# 방법
# N == 1 일 때를 고려하면, 공백이거나, 왼만 있거나, 오른쪽만 있거나 이므로 이 형태로 배열을 만듦
    # dp[1] = [1, 1, 1]
# N == 2 일 때는 맨 위 두칸이 공백일 경우, 경우의수는 3
    # 맨 위 두칸에 왼쪽만 사자가 있는 경우, 경우의수는 2, 오른쪽도 마찬가지로 경우의 수는 2
    # dp[2] = [3, 2, 2]
# N == 3 일 때는 dp[3] = [7, 5, 5]
# ... 따라서 아래 식 유도 가능
# dp[i][0] = sum(dp[i-1])
# dp[i][1] = dp[i-1][0] + dp[i-1][1]
# dp[i][2] = dp[i][1]

import sys
input = sys.stdin.readline

N = int(input())
dp = [[0, 0, 0] for _ in range(N+1)]

dp[1] = [1, 1, 1]
for i in range(2, N+1) :
    dp[i][0] = (dp[i-1][0] + dp[i-1][1] + dp[i-1][2] ) % 9901
    dp[i][1] = (dp[i-1][0] + dp[i-1][1]) % 9901
    dp[i][2] = (dp[i-1][0] + dp[i-1][1]) % 9901
print(sum(dp[N]) % 9901) 