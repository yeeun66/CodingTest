# RGB 거리 -- 이 문제 상당히 어려웠다.
# 1번 집부터 N번 집이 순서대로
# 각각의 집을 빨강, 초록, 파랑으로 칠하는 비용이 주어졌을 때, 아래 규칙을 만족하면서 모든 집을 칠하는 비용의 최솟값 구하깅
# i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.

n = int(input())
a = [0]*n

for i in range(n):
    a[i] = list(map(int,input().split()))
    
for i in range(1,n): # 1부터 시작하는 이유는 다음 입력값이 이전 입력값의 최소값을 사용하기 때문
    a[i][0] += min(a[i-1][1], a[i-1][2]) # R
    a[i][1] += min(a[i-1][0], a[i-1][2]) # G
    a[i][2] += min(a[i-1][0], a[i-1][1]) # B

print(min(a[n-1][0], a[n-1][1], a[n-1][2]))